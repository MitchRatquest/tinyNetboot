#!ipxe

# Microsoft Windows
# https://www.microsoft.com

set win_arch x64
goto ${menu} ||

:windows
set os Microsoft Windows
clear win_version
menu ${os} 
item --gap Installers
item win_install ${space} Load ${os} Installer...
item --gap Options:
item arch_set ${space} Architecture [ ${win_arch} ]
item url_set ${space} Base URL [ ${win_base_url} ]
choose win_version || goto windows_exit
goto ${win_version}

:arch_set
iseq ${win_arch} x64 && set win_arch x86 || set win_arch x64
set win_base_url http://192.168.100.1/windows
set win_arch win7ultimate
goto windows

:url_set
echo Set the HTTP URL of an extracted Windows ISO without the trailing slash:
echo e.g. http://www.mydomain.com/windows
echo
echo -n URL: ${} && read win_base_url
echo
echo netboot.xyz will attempt to load the following files:
echo ${win_base_url}/${win_arch}/bootmgr
echo ${win_base_url}/${win_arch}/boot/bcd
echo ${win_base_url}/${win_arch}/boot/boot.sdi
echo ${win_base_url}/${win_arch}/sources/boot.wim
echo
prompt Press any key to return to Windows Menu...
goto windows

:win_install
isset ${win_base_url} && goto boot || echo URL not set... && goto url_set

:boot
kernel http://192.168.100.1/wimboot
initrd http://192.168.100.1/windows/win7ultimate/BOOTMGR bootmgr
initrd http://192.168.100.1/windows/win7ultimate/BOOT/BCD bcd
initrd http://192.168.100.1/windows/win7ultimate/BOOT/BOOT.SDI boot.sdi
initrd http://192.168.100.1/windows/win7ultimate/SOURCES/BOOT.WIM boot.wim
iseq ${img_sigs_enabled} true && goto verify_sigs || goto skip_sigs
:verify_sigs
echo
echo Checking wimboot signature...
imgverify wimboot ${sigs}wimboot.sig || goto error
:skip_sigs
boot

:windows_exit
exit 0
